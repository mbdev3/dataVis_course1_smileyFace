(function (React$1, ReactDOM, d3) {
  'use strict';

  React$1 = React$1 && Object.prototype.hasOwnProperty.call(React$1, 'default') ? React$1['default'] : React$1;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const FaceContainer = ({children,width,height,centerX,centerY}) => (
   React.createElement( 'svg', { width: width, height: height },
      React.createElement( 'g', {
        transform: `translate(${centerX},${centerY})` },
        children
  	)
    )
  );

  const BackgroundCircle = ({radius,strokeWidth}) => (
    React.createElement( 'circle', {
      r: radius, fill: "#"+(0x1000000 + Math.random() * 0xffffff) .toString(16)
          .substr(1, 6), stroke: "black", 'stroke-width': strokeWidth })
  );

  const Eyes = ({eyeOffsetX,eyeOffsetY,eyeRadius,fill}) => (
    React.createElement( React.Fragment, null,
    React.createElement( 'circle', {
          cx: eyeOffsetX, cy: -eyeOffsetY, r: eyeRadius }),
    React.createElement( 'circle', {
          cx: -eyeOffsetX, cy: -eyeOffsetY, r: eyeRadius }),
    React.createElement( 'circle', {
          cx: eyeOffsetX, cy: -eyeOffsetY, r: eyeRadius/3, fill: fill }),
    React.createElement( 'circle', {
          cx: -eyeOffsetX, cy: -eyeOffsetY, r: eyeRadius/3, fill: fill })
      )
  );

  const Mouth = ({mouthRadius,mouthWidth}) => {
    const mouthArc = d3.arc()
    .innerRadius(mouthRadius)
    .outerRadius(mouthRadius + mouthWidth)
    .startAngle(Math.PI / 2)
    .endAngle((Math.PI * 3) / 2);
    return React.createElement( 'path', { d: mouthArc() })
  };

  const Face = ({
    width,
    height,
    centerX,
    centerY,
    radius,
    strokeWidth,
    eyeOffsetX,
    eyeOffsetY,
    eyeRadius,
    fill,
    mouthWidth,
    mouthRadius
  }) => (
    React.createElement( FaceContainer, {
      width: width, height: height, centerX: centerX, centerY: centerY },
      React.createElement( BackgroundCircle, {
        radius: centerY - strokeWidth / 2, strokeWidth: strokeWidth }),
      React.createElement( Eyes, {
        eyeOffsetX: eyeOffsetX, eyeOffsetY: eyeOffsetY, eyeRadius: eyeRadius, fill: fill }),
      React.createElement( Mouth, {
        mouthWidth: mouthWidth, mouthRadius: mouthRadius })
    )
  );

  const width = 150;
  const height =150;

  const array  = d3.range(18);

          


  const App = () => (
    array.map(()=>React$1.createElement( Face, {
      width: width, height: height, centerX: width / 2, centerY: height / 2, strokeWidth: 2, eyeOffsetX: 30, eyeOffsetY: 30, eyeRadius: 15 + Math.random()*5, mouthWidth: 5, mouthRadius: 35, fill: "#"+(0x1000000 + Math.random() * 0xffffff) .toString(16)
          .substr(1, 6) }))
    
  );

  const rootElement = document.getElementById(
    'root'
  );
  ReactDOM.render(React$1.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIkZhY2VDb250YWluZXIuanMiLCJCYWNrZ3JvdW5kQ2lyY2xlLmpzIiwiRXllcy5qcyIsIk1vdXRoLmpzIiwiRmFjZS5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBGYWNlQ29udGFpbmVyID0gKHtjaGlsZHJlbix3aWR0aCxoZWlnaHQsY2VudGVyWCxjZW50ZXJZfSkgPT4gKFxuIDxzdmcgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XG4gICAgPGdcbiAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke2NlbnRlclh9LCR7Y2VudGVyWX0pYH1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG5cdDwvZz5cbiAgPC9zdmc+XG4pIiwiZXhwb3J0IGNvbnN0IEJhY2tncm91bmRDaXJjbGUgPSAoe3JhZGl1cyxzdHJva2VXaWR0aH0pID0+IChcbiAgPGNpcmNsZVxuICAgIHI9e3JhZGl1c31cbiAgICBmaWxsPXtcIiNcIisoMHgxMDAwMDAwICsgTWF0aC5yYW5kb20oKSAqIDB4ZmZmZmZmKSAudG9TdHJpbmcoMTYpXG4gICAgICAgIC5zdWJzdHIoMSwgNil9XG4gICAgc3Ryb2tlPVwiYmxhY2tcIlxuICAgIHN0cm9rZS13aWR0aD17c3Ryb2tlV2lkdGh9XG4gIC8+XG4pOyIsImV4cG9ydCBjb25zdCBFeWVzID0gKHtleWVPZmZzZXRYLGV5ZU9mZnNldFksZXllUmFkaXVzLGZpbGx9KSA9PiAoXG4gIDw+XG4gIDxjaXJjbGVcbiAgICAgICAgY3g9e2V5ZU9mZnNldFh9XG4gICAgICAgIGN5PXstZXllT2Zmc2V0WX1cbiAgICAgICAgcj17ZXllUmFkaXVzfVxuICAgIFxuICAgICAgLz5cbiAgPGNpcmNsZVxuICAgICAgICBjeD17LWV5ZU9mZnNldFh9XG4gICAgICAgIGN5PXstZXllT2Zmc2V0WX1cbiAgICAgICAgcj17ZXllUmFkaXVzfVxuICAgIFxuICAgICAgLz5cbiAgPGNpcmNsZVxuICAgICAgICBjeD17ZXllT2Zmc2V0WH1cbiAgICAgICAgY3k9ey1leWVPZmZzZXRZfVxuICAgICAgICByPXtleWVSYWRpdXMvM31cbiAgICAgZmlsbD17ZmlsbH1cbiAgICAgIC8+XG4gIDxjaXJjbGVcbiAgICAgICAgY3g9ey1leWVPZmZzZXRYfVxuICAgICAgICBjeT17LWV5ZU9mZnNldFl9XG4gICAgICAgIHI9e2V5ZVJhZGl1cy8zfVxuICAgICBmaWxsPXtmaWxsfVxuICAgICAgLz5cbiAgICA8Lz5cbik7IiwiXG5pbXBvcnQgeyBhcmMgfSBmcm9tICdkMyc7XG5leHBvcnQgY29uc3QgTW91dGggPSAoe21vdXRoUmFkaXVzLG1vdXRoV2lkdGh9KSA9PiB7XG4gIGNvbnN0IG1vdXRoQXJjID0gYXJjKClcbiAgLmlubmVyUmFkaXVzKG1vdXRoUmFkaXVzKVxuICAub3V0ZXJSYWRpdXMobW91dGhSYWRpdXMgKyBtb3V0aFdpZHRoKVxuICAuc3RhcnRBbmdsZShNYXRoLlBJIC8gMilcbiAgLmVuZEFuZ2xlKChNYXRoLlBJICogMykgLyAyKTtcbiAgcmV0dXJuIDxwYXRoIGQ9e21vdXRoQXJjKCl9IC8+XG59OyIsImltcG9ydCB7IEZhY2VDb250YWluZXIgfSBmcm9tICcuL0ZhY2VDb250YWluZXInO1xuaW1wb3J0IHsgQmFja2dyb3VuZENpcmNsZSB9IGZyb20gJy4vQmFja2dyb3VuZENpcmNsZSc7XG5pbXBvcnQgeyBFeWVzIH0gZnJvbSAnLi9FeWVzJztcbmltcG9ydCB7IE1vdXRoIH0gZnJvbSAnLi9Nb3V0aCc7XG5cbmV4cG9ydCBjb25zdCBGYWNlID0gKHtcbiAgd2lkdGgsXG4gIGhlaWdodCxcbiAgY2VudGVyWCxcbiAgY2VudGVyWSxcbiAgcmFkaXVzLFxuICBzdHJva2VXaWR0aCxcbiAgZXllT2Zmc2V0WCxcbiAgZXllT2Zmc2V0WSxcbiAgZXllUmFkaXVzLFxuICBmaWxsLFxuICBtb3V0aFdpZHRoLFxuICBtb3V0aFJhZGl1c1xufSkgPT4gKFxuICA8RmFjZUNvbnRhaW5lclxuICAgIHdpZHRoPXt3aWR0aH1cbiAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICBjZW50ZXJYPXtjZW50ZXJYfVxuICAgIGNlbnRlclk9e2NlbnRlcll9XG4gID5cbiAgICA8QmFja2dyb3VuZENpcmNsZVxuICAgICAgcmFkaXVzPXtjZW50ZXJZIC0gc3Ryb2tlV2lkdGggLyAyfVxuICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgIC8+XG4gICAgPEV5ZXNcbiAgICAgIGV5ZU9mZnNldFg9e2V5ZU9mZnNldFh9XG4gICAgICBleWVPZmZzZXRZPXtleWVPZmZzZXRZfVxuICAgICAgZXllUmFkaXVzPXtleWVSYWRpdXN9XG4gICAgICBmaWxsPXtmaWxsfVxuICAgIC8+XG4gICAgPE1vdXRoXG4gICAgICBtb3V0aFdpZHRoPXttb3V0aFdpZHRofVxuICAgICAgbW91dGhSYWRpdXM9e21vdXRoUmFkaXVzfVxuICAgIC8+XG4gIDwvRmFjZUNvbnRhaW5lcj5cbik7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCB7cmFuZ2V9IGZyb20gXCJkM1wiXG5cbmltcG9ydCB7IEZhY2UgfSBmcm9tICcuL0ZhY2UnO1xuY29uc3Qgd2lkdGggPSAxNTA7XG5jb25zdCBoZWlnaHQgPTE1MDtcblxuY29uc3QgYXJyYXkgID0gcmFuZ2UoMTgpXG5cbiAgICAgICAgXG5cblxuY29uc3QgQXBwID0gKCkgPT4gKFxuICBhcnJheS5tYXAoKCk9PjxGYWNlXG4gICAgd2lkdGg9e3dpZHRofVxuICAgIGhlaWdodD17aGVpZ2h0fVxuICAgIGNlbnRlclg9e3dpZHRoIC8gMn1cbiAgICBjZW50ZXJZPXtoZWlnaHQgLyAyfVxuICAgIHN0cm9rZVdpZHRoPXsyfVxuICAgIGV5ZU9mZnNldFg9ezMwfVxuICAgIGV5ZU9mZnNldFk9ezMwfVxuICAgIGV5ZVJhZGl1cz17MTUgKyBNYXRoLnJhbmRvbSgpKjV9XG4gICAgbW91dGhXaWR0aD17NX1cbiAgICBtb3V0aFJhZGl1cz17MzV9XG4gICAgZmlsbD17XCIjXCIrKDB4MTAwMDAwMCArIE1hdGgucmFuZG9tKCkgKiAweGZmZmZmZikgLnRvU3RyaW5nKDE2KVxuICAgICAgICAuc3Vic3RyKDEsIDYpfVxuICAvPilcbiAgXG4pO1xuXG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAncm9vdCdcbik7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpO1xuIl0sIm5hbWVzIjpbImFyYyIsInJhbmdlIiwiUmVhY3QiXSwibWFwcGluZ3MiOiI7Ozs7OztFQUFPLE1BQU0sYUFBYSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO0VBQ3JFLENBQUMsOEJBQUssT0FBTyxLQUFNLEVBQUMsUUFBUTtFQUM1QixJQUFJO0VBQ0osTUFBTSxXQUFXLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7RUFFbEQsTUFBTyxRQUFTO0VBQ2hCLEVBQUs7RUFDTCxHQUFRO0VBQ1I7O0VDUk8sTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQztFQUNyRCxFQUFFO0VBQ0YsSUFBSSxHQUFHLE1BQU8sRUFDVixNQUFNLEdBQUcsQ0FBQyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsUUFBUSxHQUFHLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDbEUsU0FBUyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBRSxFQUNsQixRQUFPLE9BQU8sRUFDZCxnQkFBYyxhQUFZLENBQzFCO0VBQ0osQ0FBQzs7RUNSTSxNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO0VBQzNELEVBQUU7RUFDRixFQUFFO0VBQ0YsUUFBUSxJQUFJLFVBQVcsRUFD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